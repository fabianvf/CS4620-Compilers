Rules useless in parser due to conflicts

   23 $@6: /* empty */


State 76 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: head decllist stmtlist tail

    2 head: /* empty */

    3 tail: /* empty */

    4 decllist: /* empty */
    5         | decllist decl

    6 decl: VAR ID SEMICOLON

    7 stmtlist: /* empty */
    8         | stmtlist stmt

    9 nestmtlist: stmtlist stmt

   10 stmt: ID ASSIGN expr SEMICOLON
   11     | GO expr SEMICOLON
   12     | JUMP expr SEMICOLON
   13     | TURN expr SEMICOLON

   14 $@1: /* empty */

   15 stmt: FOR ID ASSIGN expr STEP expr TO expr DO $@1 stmt

   16 $@2: /* empty */

   17 $@3: /* empty */

   18 stmt: WHILE OPEN $@2 comp CLOSE $@3 block
   19     | COPEN stmtlist CCLOSE

   20 $@4: /* empty */

   21 $@5: /* empty */

   22 stmt: IF OPEN comp CLOSE THEN $@4 block ELSE $@5 block

   23 $@6: /* empty */

   24 stmt: IF OPEN comp CLOSE THEN $@6 block

   25 block: OBRACE nestmtlist CBRACE

   26 expr: expr PLUS term
   27     | expr MINUS term
   28     | term

   29 term: term TIMES factor
   30     | term DIV factor
   31     | factor

   32 factor: MINUS atomic
   33       | PLUS atomic
   34       | SIN factor
   35       | COS factor
   36       | SQRT factor
   37       | atomic

   38 comp: atomic EQ atomic
   39     | atomic NEQ atomic
   40     | atomic LT atomic
   41     | atomic GT atomic
   42     | atomic LEQ atomic
   43     | atomic GEQ atomic

   44 atomic: OPEN expr CLOSE
   45       | NUMBER
   46       | FLOAT
   47       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
GO (258) 11
TURN (259) 13
VAR (260) 6
JUMP (261) 12
FOR (262) 15
WHILE (263) 18
STEP (264) 15
TO (265) 15
DO (266) 15
IF (267) 22 24
THEN (268) 22 24
ELSE (269) 22
COPEN (270) 19
CCLOSE (271) 19
SIN (272) 34
COS (273) 35
SQRT (274) 36
FLOAT (275) 46
ID (276) 6 10 15 47
NUMBER (277) 45
SEMICOLON (278) 6 10 11 12 13
PLUS (279) 26 33
MINUS (280) 27 32
TIMES (281) 29
DIV (282) 30
OPEN (283) 18 22 24 44
CLOSE (284) 18 22 24 44
ASSIGN (285) 10 15
EQ (286) 38
NEQ (287) 39
LT (288) 40
GT (289) 41
GEQ (290) 43
LEQ (291) 42
OBRACE (292) 25
CBRACE (293) 25


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
head (41)
    on left: 2, on right: 1
tail (42)
    on left: 3, on right: 1
decllist (43)
    on left: 4 5, on right: 1 5
decl (44)
    on left: 6, on right: 5
stmtlist (45)
    on left: 7 8, on right: 1 8 9 19
nestmtlist (46)
    on left: 9, on right: 25
stmt (47)
    on left: 10 11 12 13 15 18 19 22 24, on right: 8 9 15
$@1 (48)
    on left: 14, on right: 15
$@2 (49)
    on left: 16, on right: 18
$@3 (50)
    on left: 17, on right: 18
$@4 (51)
    on left: 20, on right: 22
$@5 (52)
    on left: 21, on right: 22
$@6 (53)
    on left: 23, on right: 24
block (54)
    on left: 25, on right: 18 22 24
expr (55)
    on left: 26 27 28, on right: 10 11 12 13 15 26 27 44
term (56)
    on left: 29 30 31, on right: 26 27 28 29 30
factor (57)
    on left: 32 33 34 35 36 37, on right: 29 30 31 34 35 36
comp (58)
    on left: 38 39 40 41 42 43, on right: 18 22 24
atomic (59)
    on left: 44 45 46 47, on right: 32 33 37 38 39 40 41 42 43


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (head)

    program  go to state 1
    head     go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: head . decllist stmtlist tail

    $default  reduce using rule 4 (decllist)

    decllist  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    1 program: head decllist . stmtlist tail
    5 decllist: decllist . decl

    VAR  shift, and go to state 5

    $default  reduce using rule 7 (stmtlist)

    decl      go to state 6
    stmtlist  go to state 7


state 5

    6 decl: VAR . ID SEMICOLON

    ID  shift, and go to state 8


state 6

    5 decllist: decllist decl .

    $default  reduce using rule 5 (decllist)


state 7

    1 program: head decllist stmtlist . tail
    8 stmtlist: stmtlist . stmt

    GO     shift, and go to state 9
    TURN   shift, and go to state 10
    JUMP   shift, and go to state 11
    FOR    shift, and go to state 12
    WHILE  shift, and go to state 13
    IF     shift, and go to state 14
    COPEN  shift, and go to state 15
    ID     shift, and go to state 16

    $default  reduce using rule 3 (tail)

    tail  go to state 17
    stmt  go to state 18


state 8

    6 decl: VAR ID . SEMICOLON

    SEMICOLON  shift, and go to state 19


state 9

   11 stmt: GO . expr SEMICOLON

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 29
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 10

   13 stmt: TURN . expr SEMICOLON

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 33
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 11

   12 stmt: JUMP . expr SEMICOLON

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 34
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 12

   15 stmt: FOR . ID ASSIGN expr STEP expr TO expr DO $@1 stmt

    ID  shift, and go to state 35


state 13

   18 stmt: WHILE . OPEN $@2 comp CLOSE $@3 block

    OPEN  shift, and go to state 36


state 14

   22 stmt: IF . OPEN comp CLOSE THEN $@4 block ELSE $@5 block
   24     | IF . OPEN comp CLOSE THEN $@6 block

    OPEN  shift, and go to state 37


state 15

   19 stmt: COPEN . stmtlist CCLOSE

    $default  reduce using rule 7 (stmtlist)

    stmtlist  go to state 38


state 16

   10 stmt: ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 39


state 17

    1 program: head decllist stmtlist tail .

    $default  reduce using rule 1 (program)


state 18

    8 stmtlist: stmtlist stmt .

    $default  reduce using rule 8 (stmtlist)


state 19

    6 decl: VAR ID SEMICOLON .

    $default  reduce using rule 6 (decl)


state 20

   34 factor: SIN . factor

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    factor  go to state 40
    atomic  go to state 32


state 21

   35 factor: COS . factor

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    factor  go to state 41
    atomic  go to state 32


state 22

   36 factor: SQRT . factor

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    factor  go to state 42
    atomic  go to state 32


state 23

   46 atomic: FLOAT .

    $default  reduce using rule 46 (atomic)


state 24

   47 atomic: ID .

    $default  reduce using rule 47 (atomic)


state 25

   45 atomic: NUMBER .

    $default  reduce using rule 45 (atomic)


state 26

   33 factor: PLUS . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 43


state 27

   32 factor: MINUS . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 44


state 28

   44 atomic: OPEN . expr CLOSE

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 45
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 29

   11 stmt: GO expr . SEMICOLON
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    SEMICOLON  shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48


state 30

   28 expr: term .
   29 term: term . TIMES factor
   30     | term . DIV factor

    TIMES  shift, and go to state 49
    DIV    shift, and go to state 50

    $default  reduce using rule 28 (expr)


state 31

   31 term: factor .

    $default  reduce using rule 31 (term)


state 32

   37 factor: atomic .

    $default  reduce using rule 37 (factor)


state 33

   13 stmt: TURN expr . SEMICOLON
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    SEMICOLON  shift, and go to state 51
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48


state 34

   12 stmt: JUMP expr . SEMICOLON
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    SEMICOLON  shift, and go to state 52
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48


state 35

   15 stmt: FOR ID . ASSIGN expr STEP expr TO expr DO $@1 stmt

    ASSIGN  shift, and go to state 53


state 36

   18 stmt: WHILE OPEN . $@2 comp CLOSE $@3 block

    $default  reduce using rule 16 ($@2)

    $@2  go to state 54


state 37

   22 stmt: IF OPEN . comp CLOSE THEN $@4 block ELSE $@5 block
   24     | IF OPEN . comp CLOSE THEN $@6 block

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    comp    go to state 55
    atomic  go to state 56


state 38

    8 stmtlist: stmtlist . stmt
   19 stmt: COPEN stmtlist . CCLOSE

    GO      shift, and go to state 9
    TURN    shift, and go to state 10
    JUMP    shift, and go to state 11
    FOR     shift, and go to state 12
    WHILE   shift, and go to state 13
    IF      shift, and go to state 14
    COPEN   shift, and go to state 15
    CCLOSE  shift, and go to state 57
    ID      shift, and go to state 16

    stmt  go to state 18


state 39

   10 stmt: ID ASSIGN . expr SEMICOLON

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 58
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 40

   34 factor: SIN factor .

    $default  reduce using rule 34 (factor)


state 41

   35 factor: COS factor .

    $default  reduce using rule 35 (factor)


state 42

   36 factor: SQRT factor .

    $default  reduce using rule 36 (factor)


state 43

   33 factor: PLUS atomic .

    $default  reduce using rule 33 (factor)


state 44

   32 factor: MINUS atomic .

    $default  reduce using rule 32 (factor)


state 45

   26 expr: expr . PLUS term
   27     | expr . MINUS term
   44 atomic: OPEN expr . CLOSE

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    CLOSE  shift, and go to state 59


state 46

   11 stmt: GO expr SEMICOLON .

    $default  reduce using rule 11 (stmt)


state 47

   26 expr: expr PLUS . term

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    term    go to state 60
    factor  go to state 31
    atomic  go to state 32


state 48

   27 expr: expr MINUS . term

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    term    go to state 61
    factor  go to state 31
    atomic  go to state 32


state 49

   29 term: term TIMES . factor

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    factor  go to state 62
    atomic  go to state 32


state 50

   30 term: term DIV . factor

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    factor  go to state 63
    atomic  go to state 32


state 51

   13 stmt: TURN expr SEMICOLON .

    $default  reduce using rule 13 (stmt)


state 52

   12 stmt: JUMP expr SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 53

   15 stmt: FOR ID ASSIGN . expr STEP expr TO expr DO $@1 stmt

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 64
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 54

   18 stmt: WHILE OPEN $@2 . comp CLOSE $@3 block

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    comp    go to state 65
    atomic  go to state 56


state 55

   22 stmt: IF OPEN comp . CLOSE THEN $@4 block ELSE $@5 block
   24     | IF OPEN comp . CLOSE THEN $@6 block

    CLOSE  shift, and go to state 66


state 56

   38 comp: atomic . EQ atomic
   39     | atomic . NEQ atomic
   40     | atomic . LT atomic
   41     | atomic . GT atomic
   42     | atomic . LEQ atomic
   43     | atomic . GEQ atomic

    EQ   shift, and go to state 67
    NEQ  shift, and go to state 68
    LT   shift, and go to state 69
    GT   shift, and go to state 70
    GEQ  shift, and go to state 71
    LEQ  shift, and go to state 72


state 57

   19 stmt: COPEN stmtlist CCLOSE .

    $default  reduce using rule 19 (stmt)


state 58

   10 stmt: ID ASSIGN expr . SEMICOLON
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    SEMICOLON  shift, and go to state 73
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48


state 59

   44 atomic: OPEN expr CLOSE .

    $default  reduce using rule 44 (atomic)


state 60

   26 expr: expr PLUS term .
   29 term: term . TIMES factor
   30     | term . DIV factor

    TIMES  shift, and go to state 49
    DIV    shift, and go to state 50

    $default  reduce using rule 26 (expr)


state 61

   27 expr: expr MINUS term .
   29 term: term . TIMES factor
   30     | term . DIV factor

    TIMES  shift, and go to state 49
    DIV    shift, and go to state 50

    $default  reduce using rule 27 (expr)


state 62

   29 term: term TIMES factor .

    $default  reduce using rule 29 (term)


state 63

   30 term: term DIV factor .

    $default  reduce using rule 30 (term)


state 64

   15 stmt: FOR ID ASSIGN expr . STEP expr TO expr DO $@1 stmt
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    STEP   shift, and go to state 74
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48


state 65

   18 stmt: WHILE OPEN $@2 comp . CLOSE $@3 block

    CLOSE  shift, and go to state 75


state 66

   22 stmt: IF OPEN comp CLOSE . THEN $@4 block ELSE $@5 block
   24     | IF OPEN comp CLOSE . THEN $@6 block

    THEN  shift, and go to state 76


state 67

   38 comp: atomic EQ . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 77


state 68

   39 comp: atomic NEQ . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 78


state 69

   40 comp: atomic LT . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 79


state 70

   41 comp: atomic GT . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 80


state 71

   43 comp: atomic GEQ . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 81


state 72

   42 comp: atomic LEQ . atomic

    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    OPEN    shift, and go to state 28

    atomic  go to state 82


state 73

   10 stmt: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 10 (stmt)


state 74

   15 stmt: FOR ID ASSIGN expr STEP . expr TO expr DO $@1 stmt

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 83
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 75

   18 stmt: WHILE OPEN $@2 comp CLOSE . $@3 block

    $default  reduce using rule 17 ($@3)

    $@3  go to state 84


state 76

   22 stmt: IF OPEN comp CLOSE THEN . $@4 block ELSE $@5 block
   24     | IF OPEN comp CLOSE THEN . $@6 block

    OBRACE    reduce using rule 20 ($@4)
    OBRACE    [reduce using rule 23 ($@6)]
    $default  reduce using rule 20 ($@4)

    $@4  go to state 85
    $@6  go to state 86


state 77

   38 comp: atomic EQ atomic .

    $default  reduce using rule 38 (comp)


state 78

   39 comp: atomic NEQ atomic .

    $default  reduce using rule 39 (comp)


state 79

   40 comp: atomic LT atomic .

    $default  reduce using rule 40 (comp)


state 80

   41 comp: atomic GT atomic .

    $default  reduce using rule 41 (comp)


state 81

   43 comp: atomic GEQ atomic .

    $default  reduce using rule 43 (comp)


state 82

   42 comp: atomic LEQ atomic .

    $default  reduce using rule 42 (comp)


state 83

   15 stmt: FOR ID ASSIGN expr STEP expr . TO expr DO $@1 stmt
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    TO     shift, and go to state 87
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48


state 84

   18 stmt: WHILE OPEN $@2 comp CLOSE $@3 . block

    OBRACE  shift, and go to state 88

    block  go to state 89


state 85

   22 stmt: IF OPEN comp CLOSE THEN $@4 . block ELSE $@5 block

    OBRACE  shift, and go to state 88

    block  go to state 90


state 86

   24 stmt: IF OPEN comp CLOSE THEN $@6 . block

    OBRACE  shift, and go to state 88

    block  go to state 91


state 87

   15 stmt: FOR ID ASSIGN expr STEP expr TO . expr DO $@1 stmt

    SIN     shift, and go to state 20
    COS     shift, and go to state 21
    SQRT    shift, and go to state 22
    FLOAT   shift, and go to state 23
    ID      shift, and go to state 24
    NUMBER  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    OPEN    shift, and go to state 28

    expr    go to state 92
    term    go to state 30
    factor  go to state 31
    atomic  go to state 32


state 88

   25 block: OBRACE . nestmtlist CBRACE

    $default  reduce using rule 7 (stmtlist)

    stmtlist    go to state 93
    nestmtlist  go to state 94


state 89

   18 stmt: WHILE OPEN $@2 comp CLOSE $@3 block .

    $default  reduce using rule 18 (stmt)


state 90

   22 stmt: IF OPEN comp CLOSE THEN $@4 block . ELSE $@5 block

    ELSE  shift, and go to state 95


state 91

   24 stmt: IF OPEN comp CLOSE THEN $@6 block .

    $default  reduce using rule 24 (stmt)


state 92

   15 stmt: FOR ID ASSIGN expr STEP expr TO expr . DO $@1 stmt
   26 expr: expr . PLUS term
   27     | expr . MINUS term

    DO     shift, and go to state 96
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48


state 93

    8 stmtlist: stmtlist . stmt
    9 nestmtlist: stmtlist . stmt

    GO     shift, and go to state 9
    TURN   shift, and go to state 10
    JUMP   shift, and go to state 11
    FOR    shift, and go to state 12
    WHILE  shift, and go to state 13
    IF     shift, and go to state 14
    COPEN  shift, and go to state 15
    ID     shift, and go to state 16

    stmt  go to state 97


state 94

   25 block: OBRACE nestmtlist . CBRACE

    CBRACE  shift, and go to state 98


state 95

   22 stmt: IF OPEN comp CLOSE THEN $@4 block ELSE . $@5 block

    $default  reduce using rule 21 ($@5)

    $@5  go to state 99


state 96

   15 stmt: FOR ID ASSIGN expr STEP expr TO expr DO . $@1 stmt

    $default  reduce using rule 14 ($@1)

    $@1  go to state 100


state 97

    8 stmtlist: stmtlist stmt .
    9 nestmtlist: stmtlist stmt .

    CBRACE    reduce using rule 9 (nestmtlist)
    $default  reduce using rule 8 (stmtlist)


state 98

   25 block: OBRACE nestmtlist CBRACE .

    $default  reduce using rule 25 (block)


state 99

   22 stmt: IF OPEN comp CLOSE THEN $@4 block ELSE $@5 . block

    OBRACE  shift, and go to state 88

    block  go to state 101


state 100

   15 stmt: FOR ID ASSIGN expr STEP expr TO expr DO $@1 . stmt

    GO     shift, and go to state 9
    TURN   shift, and go to state 10
    JUMP   shift, and go to state 11
    FOR    shift, and go to state 12
    WHILE  shift, and go to state 13
    IF     shift, and go to state 14
    COPEN  shift, and go to state 15
    ID     shift, and go to state 16

    stmt  go to state 102


state 101

   22 stmt: IF OPEN comp CLOSE THEN $@4 block ELSE $@5 block .

    $default  reduce using rule 22 (stmt)


state 102

   15 stmt: FOR ID ASSIGN expr STEP expr TO expr DO $@1 stmt .

    $default  reduce using rule 15 (stmt)
